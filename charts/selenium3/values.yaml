global:
  seleniumGrid:
    # Image tag for all selenium components
    imageTag: 4.10.0-20230607
    #imageTag: 4.9.0
    # Image tag for browser's nodes
    nodesImageTag: 4.10.0-20230607
    #nodesImageTag: 4.9.0
    # Pull secret for all components, can be overridden individually
    imagePullSecret: ""

# Deploy Router, Distributor, EventBus, SessionMap and Nodes separately
isolateComponents: false

ingress:
  # Enable or disable ingress resource
  enabled: false
  # Name of ingress class to select which controller will implement ingress resource
  className: ""
  # Custom annotations for ingress resource
  annotations: {}
  # Default host for the ingress resource
  #hostname: selenium-grid.local
  hostname: selenium2.itblast.ovh

basicAuth:
  enabled: false

# Configuration for isolated components (applied only if `isolateComponents: true`)
components:

  # Configuration for distributor component
  distributor:
    # Distributor image name
    imageName: selenium/distributor
    # Distributor image tag (this overwrites global.seleniumGrid.imageTag parameter)
    # imageTag: 4.10.0-20230607

    imagePullPolicy: IfNotPresent
    imagePullSecret: ""

# Configuration for selenium hub deployment (applied only if `isolateComponents: false`)
hub:
  nameOverride: selenium-selenium-hub
  # Selenium Hub image name
  imageName: selenium/hub
  # Selenium Hub image tag (this overwrites global.seleniumGrid.imageTag parameter)
  imageTag: 4.10.0-20230607
  #imageTag: 4.9.0
  # Image pull policy (see https://kubernetes.io/docs/concepts/containers/images/#updating-images)
  imagePullPolicy: IfNotPresent
  # Image pull secret (see https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)
  imagePullSecret: ""

  livenessProbe:
    enabled: true
    path: /wd/hd/status
    initialDelaySeconds: 10
    failureThreshold: 10
    timeoutSeconds: 30
    periodSeconds: 10
    successThreshold: 2
  # Readiness probe settings
  readinessProbe:
    enabled: true
    path: /wd/hd/status
    initialDelaySeconds: 12
    failureThreshold: 10
    timeoutSeconds: 30
    periodSeconds: 10
    successThreshold: 2
  # Custom environment variables for selenium-hub
  extraEnvironmentVariables:
    # - name: SE_JAVA_OPTS
    #   value: "-Xmx512m"
    # - name: SECRET_VARIABLE
    #   valueFrom:
    #     secretKeyRef:
    #       name: secret-name
    #       key: secret-key
  # Custom environment variables by sourcing entire configMap, Secret, etc. for selenium-hub
  extraEnvFrom:
    # - configMapRef:
    #   name: proxy-settings
    # - secretRef:
    #   name: mysecret
  # Resources for selenium-hub container

# Configuration for chrome nodes
chromeNode:
  enabled: true
  deploymentEnabled: true
  # Number of chrome nodes
  replicas: 1
  #imageName: selenium/node-chrome
  image: selenium/node-chrome:114.0
  disable-dev-shm-usage: true
  # Resources for chrome-node container
  resources:
    requests:
      memory: 100Mi #"1Gi"
      cpu: 50m #"1"
    limits:
      cpu: 2000m # 2 vCPU
      memory: "4000Mi"
  
  extraEnvironmentVariables:
    - name: SE_JAVA_OPTS
      value: "-Xmx900m"
    # - name:
    #   valueFrom:
    #     secretKeyRef:
    #       name: secret-name
    #       key: secret-key
  # Custom environment variables by sourcing entire configMap, Secret, etc. for chrome nodes
  extraEnvFrom:
  service:
    # Create a service for node
    enabled: true
    # Service type
    type: ClusterIP
    # Custom annotations for service
    annotations: {}
  # Size limit for DSH volume mounted in container (if not set, default is "1Gi")
  dshmVolumeSizeLimit: ""

  # Wait for pod startup
  startupProbe: {}
    # httpGet:
    #   path: /status
    #   port: 5555
    # failureThreshold: 120
    # periodSeconds: 5
  # Time to wait for pod termination
  terminationGracePeriodSeconds: 30
  extraVolumeMounts: []
  # - name: my-extra-volume
  #   mountPath: /home/seluser/Downloads

  extraVolumes: []
  # - name: my-extra-volume
  #   emptyDir: {}
  # - name: my-extra-volume-from-pvc
  #   persistentVolumeClaim:
  #     claimName: my-pv-claim

  maxReplicaCount: 8
  hpa:
    url: '{{ include "seleniumGrid.graphqlURL" . }}'
    browserName: chrome
    # browserVersion: '91.0' # Optional. Only required when supporting multiple versions of browser in your Selenium Grid.
    unsafeSsl : 'true' # Optional

# Configuration for firefox nodes
firefoxNode:
  enabled: true
  deploymentEnabled: true

  replicas: 1
  imageName: selenium/node-firefox
  imagePullPolicy: IfNotPresent
  imagePullSecret: ""

  ports:
    - 5556
  # Selenium port (spec.ports[0].targetPort in kubernetes service)
  seleniumPort: 5900
  # Selenium port exposed in service (spec.ports[0].port in kubernetes service)
  seleniumServicePort: 6900
  # Annotations for firefox-node pods
  annotations: {}
  # Labels for firefox-node pods
  labels: {}
  # Tolerations for firefox-node pods
  tolerations: []
  # Node selector for firefox-node pods
  nodeSelector: {}
  # Resources for firefox-node container
  resources:
    requests:
      memory: 100Mi #"1Gi"
      cpu: 50m #"1"
    limits:
      cpu: 2000m # 2 vCPU
      memory: "4000Mi"
    
  # Custom host aliases for firefox nodes
  hostAliases:
  extraEnvironmentVariables:
    # - name: SE_JAVA_OPTS
    #   value: "-Xmx512m"
    # - name:
    #   valueFrom:
    #     secretKeyRef:
    #       name: secret-name
    #       key: secret-key
  # Custom environment variables by sourcing entire configMap, Secret, etc. for firefox nodes
  extraEnvFrom:
    # - configMapRef:
    #   name: proxy-settings
    # - secretRef:
    #   name: mysecret
  # Service configuration
  service:
    type: ClusterIP

  # Priority class name for firefox-node pods
  priorityClassName: ""

  # Wait for pod startup
  startupProbe: {}

  terminationGracePeriodSeconds: 30
  lifecycle: {}
  maxReplicaCount: 8
  hpa:
    url: '{{ include "seleniumGrid.graphqlURL" . }}'
    browserName: firefox

selenium-grid:
  hub:
    nameOverride: selenium-selenium-hub
    #replicas: 2
    #livenessProbe:
    #  path: /wd/hd/status
    #readinessProbe:
    #  path: /wd/hd/status

  chromeNode:
    # Number of chrome nodes
    replicas: 1
    disable-dev-shm-usage: true

    #extraVolumeMounts:
    #- name: dshm
    #  mountPath: /dev/shm
    #extraVolumes:
    #- name: dshm
    #  emptyDir:
    #    medium: Memory
    dshmVolumeSizeLimit: ""
    resources:
      requests:
        cpu: 100m # 0.1 vCPU
        memory: "256Mi"
      limits:
        cpu: 2000m # 2 vCPU
        memory: "4000Mi"
    volumeMounts:
      - mountPath: /dev/shm
        name: dshm
    volumes:
  edgeNode:
    # Number of chrome nodes
    replicas: 1
    resources:
      limits:
        cpu: 1000m 
        memory: "2048Mi"
